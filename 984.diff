diff --git a/src/backends/meta-monitor-config-manager.c b/src/backends/meta-monitor-config-manager.c
index b317aca0e06c30d6787f8a0aa01bc444186fe097..a1831d936c9232efe0112da527e3308afe2c924d 100644
--- a/src/backends/meta-monitor-config-manager.c
+++ b/src/backends/meta-monitor-config-manager.c
@@ -456,6 +456,25 @@ is_lid_closed (MetaMonitorManager *monitor_manager)
     return meta_backend_is_lid_closed (backend);
 }
 
+gboolean
+meta_config_key_edid_sufficient_for_specs (GList *monitor_specs)
+{
+  GList *l;
+
+  for (l = monitor_specs; l && l->next; l = l->next)
+    {
+      MetaMonitorSpec *spec = l->data;
+      MetaMonitorSpec *spec_next = l->next->data;
+
+      if (meta_monitor_spec_equals (spec, spec_next, TRUE))
+        return FALSE;
+
+      /* XXX: Should we reject e.g. only 0 serial numbers? */
+    }
+
+  return TRUE;
+}
+
 MetaMonitorsConfigKey *
 meta_create_monitors_config_key_for_current_state (MetaMonitorManager *monitor_manager)
 {
@@ -497,7 +516,8 @@ meta_create_monitors_config_key_for_current_state (MetaMonitorManager *monitor_m
 
   config_key = g_new0 (MetaMonitorsConfigKey, 1);
   *config_key = (MetaMonitorsConfigKey) {
-    .monitor_specs = monitor_specs
+    .monitor_specs = monitor_specs,
+    .edid_sufficient = meta_config_key_edid_sufficient_for_specs (monitor_specs)
   };
 
   return config_key;
@@ -987,7 +1007,8 @@ find_logical_config_for_builtin_display_rotation (MetaMonitorConfigManager *conf
 
           monitor_config = logical_monitor_config->monitor_configs->data;
           if (meta_monitor_spec_equals (meta_monitor_get_spec (panel),
-                                        monitor_config->monitor_spec))
+                                        monitor_config->monitor_spec,
+                                        config_manager->monitor_manager->edid_sufficient))
             return logical_monitor_config;
         }
     }
@@ -1435,7 +1456,8 @@ meta_monitors_config_key_new (GList *logical_monitor_configs,
 
   config_key = g_new0 (MetaMonitorsConfigKey, 1);
   *config_key = (MetaMonitorsConfigKey) {
-    .monitor_specs = monitor_specs
+    .monitor_specs = monitor_specs,
+    .edid_sufficient = meta_config_key_edid_sufficient_for_specs (monitor_specs)
   };
 
   return config_key;
@@ -1461,10 +1483,12 @@ meta_monitors_config_key_hash (gconstpointer data)
     {
       MetaMonitorSpec *monitor_spec = l->data;
 
-      hash ^= (g_str_hash (monitor_spec->connector) ^
-               g_str_hash (monitor_spec->vendor) ^
+      hash ^= (g_str_hash (monitor_spec->vendor) ^
                g_str_hash (monitor_spec->product) ^
                g_str_hash (monitor_spec->serial));
+
+      if (!config_key->edid_sufficient)
+        hash ^= g_str_hash (monitor_spec->connector);
     }
 
   return hash;
@@ -1478,6 +1502,9 @@ meta_monitors_config_key_equal (gconstpointer data_a,
   const MetaMonitorsConfigKey *config_key_b = data_b;
   GList *l_a, *l_b;
 
+  if (config_key_a->edid_sufficient != config_key_b->edid_sufficient)
+    return FALSE;
+
   for (l_a = config_key_a->monitor_specs, l_b = config_key_b->monitor_specs;
        l_a && l_b;
        l_a = l_a->next, l_b = l_b->next)
@@ -1485,7 +1512,8 @@ meta_monitors_config_key_equal (gconstpointer data_a,
       MetaMonitorSpec *monitor_spec_a = l_a->data;
       MetaMonitorSpec *monitor_spec_b = l_b->data;
 
-      if (!meta_monitor_spec_equals (monitor_spec_a, monitor_spec_b))
+      if (!meta_monitor_spec_equals (monitor_spec_a, monitor_spec_b,
+                                     config_key_a->edid_sufficient))
         return FALSE;
     }
 
@@ -1550,7 +1578,8 @@ meta_monitors_config_new (MetaMonitorManager           *monitor_manager,
 
       monitor_spec = meta_monitor_get_spec (monitor);
       if (meta_logical_monitor_configs_have_monitor (logical_monitor_configs,
-                                                     monitor_spec))
+                                                     monitor_spec,
+                                                     monitor_manager->edid_sufficient))
         continue;
 
       disabled_monitor_specs =
@@ -1753,7 +1782,8 @@ has_adjacent_neighbour (MetaMonitorsConfig       *config,
 
 gboolean
 meta_logical_monitor_configs_have_monitor (GList           *logical_monitor_configs,
-                                           MetaMonitorSpec *monitor_spec)
+                                           MetaMonitorSpec *monitor_spec,
+                                           gboolean         edid_sufficient)
 {
   GList *l;
 
@@ -1767,7 +1797,8 @@ meta_logical_monitor_configs_have_monitor (GList           *logical_monitor_conf
           MetaMonitorConfig *monitor_config = k->data;
 
           if (meta_monitor_spec_equals (monitor_spec,
-                                        monitor_config->monitor_spec))
+                                        monitor_config->monitor_spec,
+                                        edid_sufficient))
             return TRUE;
         }
     }
@@ -1780,7 +1811,8 @@ meta_monitors_config_is_monitor_enabled (MetaMonitorsConfig *config,
                                          MetaMonitorSpec    *monitor_spec)
 {
   return meta_logical_monitor_configs_have_monitor (config->logical_monitor_configs,
-                                                    monitor_spec);
+                                                    monitor_spec,
+                                                    config->key->edid_sufficient);
 }
 
 gboolean
diff --git a/src/backends/meta-monitor-config-manager.h b/src/backends/meta-monitor-config-manager.h
index 86756a7e3342927cab7428a30aabb9148e680ec7..8afd3806d39d4cfb2ba2b76a7dd335a178a2a24d 100644
--- a/src/backends/meta-monitor-config-manager.h
+++ b/src/backends/meta-monitor-config-manager.h
@@ -48,7 +48,9 @@ typedef struct _MetaLogicalMonitorConfig
 
 typedef struct _MetaMonitorsConfigKey
 {
+  /* monitor_specs needs to be sorted using meta_monitor_spec_compare. */
   GList *monitor_specs;
+  gboolean edid_sufficient;
 } MetaMonitorsConfigKey;
 
 typedef enum _MetaMonitorsConfigFlag
@@ -159,6 +161,9 @@ META_EXPORT_TEST
 gboolean meta_monitors_config_key_equal (gconstpointer config_key_a,
                                          gconstpointer config_key_b);
 
+META_EXPORT_TEST
+gboolean meta_config_key_edid_sufficient_for_specs (GList *monitor_specs);
+
 META_EXPORT_TEST
 void meta_monitors_config_key_free (MetaMonitorsConfigKey *config_key);
 
@@ -173,7 +178,8 @@ MetaMonitorsConfigKey * meta_create_monitors_config_key_for_current_state (MetaM
 
 META_EXPORT_TEST
 gboolean meta_logical_monitor_configs_have_monitor (GList           *logical_monitor_configs,
-                                                    MetaMonitorSpec *monitor_spec);
+                                                    MetaMonitorSpec *monitor_spec,
+                                                    gboolean         edid_sufficient);
 
 META_EXPORT_TEST
 gboolean meta_verify_monitor_mode_spec (MetaMonitorModeSpec *monitor_mode_spec,
diff --git a/src/backends/meta-monitor-manager-private.h b/src/backends/meta-monitor-manager-private.h
index b9c68aad473bce221a8ce9f72785af7d7ab8754a..a05d9e0247af4294813b73496554d5d3bc30fef2 100644
--- a/src/backends/meta-monitor-manager-private.h
+++ b/src/backends/meta-monitor-manager-private.h
@@ -121,6 +121,7 @@ struct _MetaMonitorManager
   int screen_height;
 
   GList *monitors;
+  gboolean edid_sufficient;
 
   GList *logical_monitors;
   MetaLogicalMonitor *primary_logical_monitor;
diff --git a/src/backends/meta-monitor-manager.c b/src/backends/meta-monitor-manager.c
index 4488ab32ac851032a4c948e6b21b9e06ee5b1be4..beab1b1163abdee5aed162324a3b58a5351a8ed8 100644
--- a/src/backends/meta-monitor-manager.c
+++ b/src/backends/meta-monitor-manager.c
@@ -2635,7 +2635,8 @@ meta_monitor_manager_get_monitor_from_spec (MetaMonitorManager *manager,
       MetaMonitor *monitor = l->data;
 
       if (meta_monitor_spec_equals (meta_monitor_get_spec (monitor),
-                                    monitor_spec))
+                                    monitor_spec,
+                                    manager->edid_sufficient))
         return monitor;
     }
 
@@ -2781,6 +2782,7 @@ rebuild_monitors (MetaMonitorManager *manager)
 {
   GList *gpus;
   GList *l;
+  GList *specs;
 
   if (manager->monitors)
     {
@@ -2820,6 +2822,15 @@ rebuild_monitors (MetaMonitorManager *manager)
             }
         }
     }
+
+  specs = NULL;
+  for (l = manager->monitors; l; l = l->next)
+    specs = g_list_prepend (specs, meta_monitor_get_spec (l->data));
+
+  specs = g_list_sort (specs,
+                       (GCompareFunc) meta_monitor_spec_compare);
+  manager->edid_sufficient = meta_config_key_edid_sufficient_for_specs (specs);
+  g_list_free (specs);
 }
 
 void
diff --git a/src/backends/meta-monitor.c b/src/backends/meta-monitor.c
index ae7816a3bd8429fdede1e2407e6258aaa52ebe45..d762e5a8a102a64a9618b54f439e3b9f71c3eca6 100644
--- a/src/backends/meta-monitor.c
+++ b/src/backends/meta-monitor.c
@@ -129,12 +129,13 @@ meta_monitor_spec_clone (MetaMonitorSpec *monitor_spec)
 
 gboolean
 meta_monitor_spec_equals (MetaMonitorSpec *monitor_spec,
-                          MetaMonitorSpec *other_monitor_spec)
+                          MetaMonitorSpec *other_monitor_spec,
+                          gboolean         edid_only)
 {
-  return (g_str_equal (monitor_spec->connector, other_monitor_spec->connector) &&
-          g_str_equal (monitor_spec->vendor, other_monitor_spec->vendor) &&
+  return (g_str_equal (monitor_spec->vendor, other_monitor_spec->vendor) &&
           g_str_equal (monitor_spec->product, other_monitor_spec->product) &&
-          g_str_equal (monitor_spec->serial, other_monitor_spec->serial));
+          g_str_equal (monitor_spec->serial, other_monitor_spec->serial) &&
+          (edid_only || g_str_equal (monitor_spec->connector, other_monitor_spec->connector)));
 }
 
 int
@@ -143,19 +144,23 @@ meta_monitor_spec_compare (MetaMonitorSpec *monitor_spec_a,
 {
   int ret;
 
-  ret = strcmp (monitor_spec_a->connector, monitor_spec_b->connector);
+  ret = strcmp (monitor_spec_a->vendor, monitor_spec_b->vendor);
   if (ret != 0)
     return ret;
 
-  ret = strcmp (monitor_spec_a->vendor, monitor_spec_b->vendor);
+  ret = strcmp (monitor_spec_a->product, monitor_spec_b->product);
   if (ret != 0)
     return ret;
 
-  ret = strcmp (monitor_spec_a->product, monitor_spec_b->product);
+  ret = strcmp (monitor_spec_a->serial, monitor_spec_b->serial);
+  if (ret != 0)
+    return ret;
+
+  ret = strcmp (monitor_spec_a->connector, monitor_spec_b->connector);
   if (ret != 0)
     return ret;
 
-  return strcmp (monitor_spec_a->serial, monitor_spec_b->serial);
+  return 0;
 }
 
 void
diff --git a/src/backends/meta-monitor.h b/src/backends/meta-monitor.h
index eb6b99fea162c367b239dab2be11e3843bdb46a7..65d2f714976195453666a6849b84aeb1dcd9159f 100644
--- a/src/backends/meta-monitor.h
+++ b/src/backends/meta-monitor.h
@@ -272,7 +272,8 @@ MetaMonitorSpec * meta_monitor_spec_clone (MetaMonitorSpec *monitor_id);
 
 META_EXPORT_TEST
 gboolean meta_monitor_spec_equals (MetaMonitorSpec *monitor_id,
-                                   MetaMonitorSpec *other_monitor_id);
+                                   MetaMonitorSpec *other_monitor_id,
+                                   gboolean         edid_only);
 
 META_EXPORT_TEST
 int meta_monitor_spec_compare (MetaMonitorSpec *monitor_spec_a,
diff --git a/src/tests/monitor-configs/lid-switch.xml b/src/tests/monitor-configs/lid-switch.xml
index fe5144660291f7c7485b56c4bf13cf549d2ee7fc..95d629e9bbc4cdfbb64d78d92edb208a981c797b 100644
--- a/src/tests/monitor-configs/lid-switch.xml
+++ b/src/tests/monitor-configs/lid-switch.xml
@@ -30,7 +30,7 @@
 	  <connector>DP-1</connector>
 	  <vendor>MetaProduct's Inc.</vendor>
 	  <product>MetaMonitor</product>
-	  <serial>0x123456</serial>
+	  <serial>0x654321</serial>
 	</monitorspec>
 	<mode>
 	  <width>1024</width>
@@ -54,7 +54,7 @@
 	  <connector>DP-1</connector>
 	  <vendor>MetaProduct's Inc.</vendor>
 	  <product>MetaMonitor</product>
-	  <serial>0x123456</serial>
+	  <serial>0x654321</serial>
 	</monitorspec>
 	<mode>
 	  <width>1024</width>
diff --git a/src/tests/monitor-store-unit-tests.c b/src/tests/monitor-store-unit-tests.c
index b9d5622b7ae33cdb045d8c789d8fd06d6a7aff90..4ad70cbd9e46445a97b51f2f0aca2ec25013afeb 100644
--- a/src/tests/monitor-store-unit-tests.c
+++ b/src/tests/monitor-store-unit-tests.c
@@ -108,7 +108,8 @@ create_config_key_from_expect (MonitorStoreTestConfiguration *expect_config)
 
   config_key = g_new0 (MetaMonitorsConfigKey, 1);
   *config_key = (MetaMonitorsConfigKey) {
-    .monitor_specs = monitor_specs
+    .monitor_specs = monitor_specs,
+    .edid_sufficient = meta_config_key_edid_sufficient_for_specs (monitor_specs)
   };
 
   return config_key;
diff --git a/src/tests/monitor-test-utils.c b/src/tests/monitor-test-utils.c
index a83d8c8e2842e397a1b6c6c92ae0f23d69e7d10f..ddfe7e2b4970edf7df6e7712178d413df8905f0d 100644
--- a/src/tests/monitor-test-utils.c
+++ b/src/tests/monitor-test-utils.c
@@ -541,6 +541,9 @@ create_monitor_test_setup (MonitorTestCaseSetup *setup,
   int n_laptop_panels = 0;
   int n_normal_panels = 0;
 
+  if (flags & MONITOR_TEST_FLAG_OFFSET_DP_CONNECTOR)
+    n_normal_panels = 100;
+
   test_setup = g_new0 (MetaMonitorTestSetup, 1);
 
   test_setup->modes = NULL;
diff --git a/src/tests/monitor-test-utils.h b/src/tests/monitor-test-utils.h
index 3ebf1ff796ac2f04916768bff8c89c81e74e3f35..4d0653e8208b3906b9f2938975c420e6c0234b7e 100644
--- a/src/tests/monitor-test-utils.h
+++ b/src/tests/monitor-test-utils.h
@@ -78,7 +78,8 @@
 typedef enum _MonitorTestFlag
 {
   MONITOR_TEST_FLAG_NONE,
-  MONITOR_TEST_FLAG_NO_STORED
+  MONITOR_TEST_FLAG_NO_STORED,
+  MONITOR_TEST_FLAG_OFFSET_DP_CONNECTOR,
 } MonitorTestFlag;
 
 typedef struct _MonitorTestCaseMode
diff --git a/src/tests/monitor-unit-tests.c b/src/tests/monitor-unit-tests.c
index 6cce7399713b57eaa224c6b9a97f7af722a571da..44e6f7130477570ce9f320d6eadcbcddb41563e0 100644
--- a/src/tests/monitor-unit-tests.c
+++ b/src/tests/monitor-unit-tests.c
@@ -4824,6 +4824,16 @@ meta_test_monitor_custom_oneoff (void)
 
   check_monitor_configuration (&test_case.expect);
   check_monitor_test_clients_state ();
+
+  /* Same test after hotplugging the monitor to a different port */
+  test_setup = create_monitor_test_setup (&test_case.setup,
+                                          MONITOR_TEST_FLAG_NONE |
+                                          MONITOR_TEST_FLAG_OFFSET_DP_CONNECTOR);
+  set_custom_monitor_config ("oneoff.xml");
+  emulate_hotplug (test_setup);
+
+  check_monitor_configuration (&test_case.expect);
+  check_monitor_test_clients_state ();
 }
 
 static void
@@ -4855,6 +4865,7 @@ meta_test_monitor_custom_lid_switch_config (void)
           .crtc = -1,
           .modes = { 0 },
           .n_modes = 1,
+          .serial = "0x654321",
           .preferred_mode = 0,
           .possible_crtcs = { 1 },
           .n_possible_crtcs = 1,
@@ -4963,6 +4974,7 @@ meta_test_monitor_custom_lid_switch_config (void)
   check_monitor_test_clients_state ();
 
   /* External monitor connected */
+  g_debug ("External monitor connected");
 
   test_case.setup.n_outputs = 2;
   test_case.expect.n_monitors = 2;
@@ -4985,6 +4997,7 @@ meta_test_monitor_custom_lid_switch_config (void)
   check_monitor_test_clients_state ();
 
   /* Lid was closed */
+  g_debug ("Closing lid");
 
   test_case.expect.crtcs[0].current_mode = -1;
   test_case.expect.crtcs[1].transform = META_MONITOR_TRANSFORM_90;
@@ -5005,6 +5018,7 @@ meta_test_monitor_custom_lid_switch_config (void)
   check_monitor_test_clients_state ();
 
   /* Lid was opened */
+  g_debug ("Opening lid");
 
   test_case.expect.crtcs[0].current_mode = 0;
   test_case.expect.crtcs[0].transform = META_MONITOR_TRANSFORM_NORMAL;
