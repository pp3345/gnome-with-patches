diff --git a/js/ui/search.js b/js/ui/search.js
index 45ef424444b642d2df0e6c00a45858bf41ccf999..9c4a76d7bdd2e7e664b3d263ebda20ee8388350c 100644
--- a/js/ui/search.js
+++ b/js/ui/search.js
@@ -424,8 +424,11 @@ var GridSearchResultsLayout = GObject.registerClass({
             const [childHeight] = child.get_preferred_height(-1);
             childBox.set_size(childWidth, childHeight);
 
-            if (childBox.x1 + childWidth > width)
-                return;
+            if (childBox.x1 + childWidth > width) {
+                childBox.set_size(0, 0);
+                child.allocate(childBox);
+                continue;
+            }
 
             child.allocate(childBox);
 
diff --git a/js/ui/userWidget.js b/js/ui/userWidget.js
index 0f4ed089121e23f5926033cae6f23edd110c206f..c022bf1852c0f42c84b556443528b24421c12484 100644
--- a/js/ui/userWidget.js
+++ b/js/ui/userWidget.js
@@ -152,13 +152,17 @@ class UserWidgetLabel extends St.Widget {
 
         let [, , natRealNameWidth] = this._realNameLabel.get_preferred_size();
 
-        if (natRealNameWidth <= availWidth)
+        let childBox = new Clutter.ActorBox();
+
+        if (natRealNameWidth <= availWidth) {
             this._currentLabel = this._realNameLabel;
-        else
+            this._userNameLabel.allocate(childBox);
+        } else {
             this._currentLabel = this._userNameLabel;
+            this._realNameLabel.allocate(childBox);
+        }
         this.label_actor = this._currentLabel;
 
-        let childBox = new Clutter.ActorBox();
         childBox.x1 = 0;
         childBox.y1 = 0;
         childBox.x2 = availWidth;
diff --git a/js/ui/workspace.js b/js/ui/workspace.js
index ee7cbdc20251e031d3bebea1b11c7c2f15c8acee..e308bb89707660247ee688d835aa4bb7fb8c5c95 100644
--- a/js/ui/workspace.js
+++ b/js/ui/workspace.js
@@ -595,8 +595,10 @@ var WorkspaceLayout = GObject.registerClass({
 
             // The fifth element in the slot array is the WindowPreview
             const index = this._windowSlots.findIndex(s => s[4] === child);
-            if (index === -1)
+            if (index === -1) {
+                child.allocate(childBox);
                 continue;
+            }
 
             const [x, y, width, height] = this._windowSlots[index];
             const windowInfo = this._windows.get(child);
@@ -630,6 +632,7 @@ var WorkspaceLayout = GObject.registerClass({
 
             if (windowInfo.currentTransition) {
                 windowInfo.currentTransition.get_interval().set_final(childBox);
+                child.allocate(child.allocation);
                 continue;
             }
 
diff --git a/js/ui/workspaceThumbnail.js b/js/ui/workspaceThumbnail.js
index 611bccfadd37bc052830c4fd0376b8c9956ff9a1..c38d7ced59250e1826606dd4281d0602cb39f797 100644
--- a/js/ui/workspaceThumbnail.js
+++ b/js/ui/workspaceThumbnail.js
@@ -1277,6 +1277,9 @@ var ThumbnailsBox = GObject.registerClass({
 
         let childBox = new Clutter.ActorBox();
 
+        this._dropPlaceholder.allocate_preferred_size(
+            ...this._dropPlaceholder.get_position());
+
         for (let i = 0; i < this._thumbnails.length; i++) {
             let thumbnail = this._thumbnails[i];
 
